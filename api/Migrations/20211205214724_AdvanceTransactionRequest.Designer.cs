// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Infrastructure.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(TransactionContext))]
    [Migration("20211205214724_AdvanceTransactionRequest")]
    partial class AdvanceTransactionRequest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("api.Models.EntityModel.AdvanceTransactionEntities.AdvanceTransactionRequest", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<DateTime?>("AnalysisEndedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("AnalysisEndedAt");

                    b.Property<DateTime?>("AnalysisStartedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("AnalysisStartedAt");

                    b.Property<string>("AnalysisStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AnalysisStatus");

                    b.Property<decimal>("AnticipatedAmount")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("AnticipatedAmount");

                    b.Property<decimal>("RequestedAmount")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("RequestedAmount");

                    b.Property<DateTime>("RequestedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("RequestedAt");

                    b.HasKey("ID");

                    b.ToTable("AdvanceTransactionRequest", (string)null);
                });

            modelBuilder.Entity("api.Models.EntityModel.TransactionInstallmentModels.TransactionInstallment", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<decimal?>("AnticipatedAmount")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("AnticipatedAmount");

                    b.Property<DateTime>("ExpectedReceiptDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpectedReceiptDate");

                    b.Property<decimal>("GrossAmount")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("GrossAmount");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("NetAmount");

                    b.Property<long>("ParcelNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("ParcelNumber");

                    b.Property<long>("TransactionNSU")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("TransferDate");

                    b.HasKey("ID");

                    b.HasIndex("TransactionNSU");

                    b.ToTable("TransactionInstallment", (string)null);
                });

            modelBuilder.Entity("api.Models.EntityModel.Transactions.Transaction", b =>
                {
                    b.Property<long>("NSU")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("NSU"), 1L, 1);

                    b.Property<string>("AcquirerConfirmation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AcquirerConfirmation");

                    b.Property<long?>("AdvanceTransactionRequestID")
                        .HasColumnType("bigint");

                    b.Property<bool>("Anticipated")
                        .HasColumnType("bit")
                        .HasColumnName("Anticipated");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ApprovalDate");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<DateTime?>("DisapprovalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DisapprovalDate");

                    b.Property<decimal>("FixedRateCharged")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("FixedRateCharged");

                    b.Property<decimal>("GrossAmount")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("GrossAmount");

                    b.Property<int>("InstallmentsNumber")
                        .HasColumnType("int")
                        .HasColumnName("InstallmentsNumber");

                    b.Property<string>("LastCardDigits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastCardDigits");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("NetAmount");

                    b.HasKey("NSU");

                    b.HasIndex("AdvanceTransactionRequestID");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("api.Models.EntityModel.TransactionInstallmentModels.TransactionInstallment", b =>
                {
                    b.HasOne("api.Models.EntityModel.Transactions.Transaction", "Transaction")
                        .WithMany("TransactionInstallments")
                        .HasForeignKey("TransactionNSU")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("api.Models.EntityModel.Transactions.Transaction", b =>
                {
                    b.HasOne("api.Models.EntityModel.AdvanceTransactionEntities.AdvanceTransactionRequest", "AdvanceTransactionRequest")
                        .WithMany("RequestedTransactions")
                        .HasForeignKey("AdvanceTransactionRequestID");

                    b.Navigation("AdvanceTransactionRequest");
                });

            modelBuilder.Entity("api.Models.EntityModel.AdvanceTransactionEntities.AdvanceTransactionRequest", b =>
                {
                    b.Navigation("RequestedTransactions");
                });

            modelBuilder.Entity("api.Models.EntityModel.Transactions.Transaction", b =>
                {
                    b.Navigation("TransactionInstallments");
                });
#pragma warning restore 612, 618
        }
    }
}
